// APIS washing program by (R)soft 2015



//-------------------------------------------------------------------------------------
// Определения команд программы стирки. Значения команд выбраны
// таким образом, чтобы при возможных сбоях и ошибках программирования режимов стирки
// была возможность выявить ошибку 4 и остановить выполнение программы.
#define PRG_Pause         0xA0  // 2 bytes - Пауза (выдержка времени)
#define PRG_LockState     0xA1  // 2 bytes - Управление замком люка
#define PRG_WaterState    0xA2  // 3 bytes - Управление заливом воды
#define PRG_PompState     0xA3  // 3 bytes - Управление помпой
#define PRG_HeatingState  0xA4  // 3 bytes - Управление ТЭНом
#define PRG_Temperature   0xA5  // Установка температуры подогрева воды (по умолчанию 60 градусов)
#define PRG_RotorState    0xA6  // 3 bytes - Управление оборотами мотора
#define PRG_ForwardState  0xA7  // 3 bytes - Включение мотора вперед
#define PRG_ReverseState  0xA8  // 3 bytes - Включение мотора назад
#define PRG_SaveState     0xA9  // Запомнить текущее состояние программного счетчика в EEPROM
#define PRG_Buzzer        0xAA  // 2 bytes - Включить сигнал на время t
#define PRG_MotorSpin     0xAB  // 3 bytes - Плавный разгон и торможение мотора в режиме отжим
#define PRG_MotorZigZag   0xAC  // 3 bytes - вкл мотор вперед, пауза, выкл, пауза, вклю мотор назад, пауза, выкл, пауза
#define PRG_LockWait      0xAD  // 1 byte - Ожидание закрытия люка
#define PRG_TWait         0xAE  // 1 byte - Ожидание нагрева воды до установленной температуры
#define PRG_L2Wait        0xAF  // 1 byte - Ожидание срабатывания датчика уровня LEVEL2=0
#define PRG_End           0xEE  // 1 byte - Конец программы


//-----------------------------------------------------------------------------------
// --- Таблица программ стирки ---
// Один кадр программы содержит три байта:
// Первый - команда, второй - параметр команды, третий - время выполнения в секундах
// Третий параметр может быть ноль (если не нужна выдержка времени).
// Некоторые команды требуют проверок, например блокировка люка или уровень в баке.
// До тех пор, пока требуемые условия программы не будут выполнены, состояние программы
// может висеть очень долго в ожидании (не закрыт люк или забыли включить воду).
// Это ожидание можно прервать кнопкой СТАРТ/СТОП прораммы.
// Последний кадр всегда один байт PRG_End - конец программы.


//-----------------------------------------------------------------------
// Программа 9 - быстрая стирка без полоскания, слив и деликатный отжим
static __flash unsigned char PROGRAM9[]=
{
  PRG_LockState,    0xFF, // Заблокировать люк
//  PRG_LockWait, // Ждем закрытия и блокировки люка
  PRG_Buzzer,     0x05, // Сигнал
  PRG_L2Wait,   // Ждем уровня LEVEL2=0 (в баке есть вода)

  PRG_MotorZigZag, 0x37, 10, // Первый цикл 10 с
  PRG_MotorZigZag, 0x37, 10,
  PRG_MotorZigZag, 0x37, 10,
  PRG_MotorZigZag, 0x37, 10,
  PRG_MotorZigZag, 0x37, 10,
  PRG_MotorZigZag, 0x37, 10,
  PRG_MotorZigZag, 0x37, 10,
  PRG_MotorZigZag, 0x37, 10,  
  PRG_MotorZigZag, 0x37, 10,
  PRG_MotorZigZag, 0x37, 10,

  PRG_Pause, 2,

  PRG_PompState,    0xFF, 1, // Включить помпу, подождать

  PRG_MotorSpin,    0x41, 30, // Плавно разгоняемся до оборотов 0x41 и крутим 30 с

  PRG_PompState,    0x00, 0, // Выключить помпу
  PRG_LockState,    0x00,    // Разблокировать люк

  PRG_End

};

//---------------------------------------
// Программа 14 - слив и интенсивный отжим
static __flash unsigned char PROGRAM14[]=
{
  PRG_LockState,    0xFF, // Заблокировать люк
//  PRG_LockWait, // Ждем закрытия люка
  PRG_Buzzer,     0x05, // Сигнал
  PRG_PompState,    0xFF, 1, // Включить помпу, подождать

  PRG_MotorSpin,    0x50, 40, // Плавно разгоняемся до оборотов 0x50 и крутим 40 с

  PRG_PompState,    0x00, 0, // Выключить помпу
  PRG_LockState,    0x00,    // Разблокировать люк
  
  PRG_End

};


//---------------------------------------
// Программа 15 - слив и деликатный отжим
static __flash unsigned char PROGRAM15[]=
{
  PRG_LockState,    0xFF, // Заблокировать люк
//  PRG_LockWait, // Ждем закрытия люка
  PRG_Buzzer,     0x05, // Сигнал
  PRG_PompState,    0xFF, 1, // Включить помпу, подождать

  PRG_MotorSpin,    0x41, 30, // Плавно разгоняемся до оборотов 0x41 и крутим 30 с

  PRG_PompState,    0x00, 0, // Выключить помпу
  PRG_LockState,    0x00,    // Разблокировать люк

  PRG_End
};

//---------------------------------------
// Программа 16 - слив воды
static __flash unsigned char PROGRAM16[]=
{
  PRG_LockState,  0xFF, // Заблокировать люк
//  PRG_LockWait, // Ждать успешного закрытия люка
  PRG_Buzzer,     0x05, // Сигнал
  PRG_PompState,  0xFF, 20,  // Включить помпу на 20 с
  PRG_PompState,  0x00, 0,   // Выключить помпу
  PRG_LockState,  0x00,  // Разблокировать люк

  PRG_End // Конец программы
};

